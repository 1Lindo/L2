package main

import (
	"fmt"
)

func main() {
	var s = []string{"1", "2", "3"}
	modifySlice(s)
	fmt.Println(s)
}

func modifySlice(i []string) {
	i[0] = "3"
	i = append(i, "4")
	i[1] = "5"
	i = append(i, "6")
}

/*
При передаче среза s в функцию modifySlice передается pointer на первый элемент родительского массива среза s.
Это означает, что любые изменения внутри функции, которые затрагивают элементы среза,
будут отражаться на оригинальном массиве в main().

Далее по этапам:

1) i[0] = "3" изменяет первый элемент среза на "3";
2) i = append(i, "4") добавляет новый элемент "4" в копию среза, но не изменяет оригинальный срез s,
так как append создает новый родительский массив, копирует в него значения из предыдущего и добавляет к нему новые;
3) i[1] = "5" изменяет второй элемент копии среза на "5";
4) i = append(i, "6") снова добавляет новый элемент "6" в копию среза, но не изменяет оригинальный срез s.

Таким образом, после выполнения modifySlice, измененный срез остается внутри функции, а оригинальный срез в main()
остается как после первого изменеия (см пункт №1), что приводит к выводу [3 2 3].
*/
